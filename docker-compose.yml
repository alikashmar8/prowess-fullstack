version: '3.6'

services:
    nginx-proxy:
        restart: always
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - letsencrypt-certs:/etc/nginx/certs
          - letsencrypt-vhost-d:/etc/nginx/vhost.d
          - letsencrypt-html:/usr/share/nginx/html

    letsencrypt-proxy:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: letsencrypt-proxy
        restart: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - letsencrypt-certs:/etc/nginx/certs
          - letsencrypt-vhost-d:/etc/nginx/vhost.d
          - letsencrypt-html:/usr/share/nginx/html
        volumes_from:
            - 'nginx-proxy'
        environment:
          - DEFAULT_EMAIL=alikashmar8@gmail.com
          - NGINX_PROXY_CONTAINER=nginx-proxy


    mysql:
        restart: always
        image: mysql:8.0
        container_name: prowess_db
        command: --default-authentication-plugin=mysql_native_password
        ports:
          - '3306:3306'
        expose:
          - 3306
        environment:
          - MYSQL_DATABASE=prowess_db
          - MYSQL_ROOT_USER=root
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_ROOT_HOST=%
          - MYSQL_USER=prowess
          - MYSQL_PASSWORD=P@ssw0rd
        volumes:
          - db:/var/lib/mysql
          # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
          - my-network
    backend:
        restart: always
        image: prowess_backend
        container_name: prowess_backend
        ports:
          - 3000:3000
        build:
            context: ./prowess-backend
            dockerfile: ./Dockerfile
        env_file:
          - ./prowess-backend/.env
        volumes:
            - ./prowess-backend:/backend
            - ./scripts:/scripts
            - '/backend/node_modules'
        links:
            - mysql
        depends_on:
          - mysql
        networks:
          - my-network

        command: >
            sh -c "/scripts/wait-for-it.sh mysql:3306 -- npm run build && npm run start:prod"
    frontend:
        restart: always
        # image: prowess/frontend
        container_name: prowess_frontend
        build: ./prowess-frontend/
        ports:
          - "4200:80"
        environment:
            VIRTUAL_HOST: 44.197.151.2
            LETSENCRYPT_HOST: 44.197.151.2
        # # links:
        # #   - backend


networks:
  my-network:
    driver: bridge
  default:
    external:
      name: nginx-proxy
    
volumes:
  db:
    driver: local
